{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Deploy a new Lambda function and API Gateway if one does not exist",
  "Parameters": {
    "KinesisStreamName": {
      "Type": "String",
      "Description": "The name of the Kinesis stream that will be used for processing events.",
      "Default": "ImageEventStream"
    }
  },
  "Resources": {
    "KinesisStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": {
          "Ref": "KinesisStreamName"
        },
        "ShardCount": 1
      }
    },
    "ApiGateway": {
      "Type": "AWS::Serverless::HttpApi",
      "Properties": {
        "StageName": "prod",
        "CorsConfiguration": {
          "AllowMethods": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "AllowHeaders": [
            "*"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "NewImageApiLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "ImageLambda",
        "Handler": "ImageApi::ImageApi.LambdaEntryPoint::FunctionHandlerAsync",
        "Runtime": "dotnet8",
        "CodeUri": "./publish",
        "MemorySize": 256,
        "Timeout": 30,
        "Policies": [
          "AWSLambdaBasicExecutionRole"
        ],
        "Role": "arn:aws:iam::288761734568:role/ImageApiLambdaRole",
        "Events": {
          "PostImage": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/image",
              "Method": "POST",
              "ApiId": {
                "Ref": "ApiGateway"
              }
            }
          },
          "GetEvents": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/events",
              "Method": "GET",
              "ApiId": {
                "Ref": "ApiGateway"
              }
            }
          }
        }
      }
    },
    "ApiGatewayInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NewImageApiLambda"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*"
        }
      }
    },
    "KinesisProcessorLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "KinesisEventProcessor",
        "Handler": "ImageApi::ImageApi.KinesisEventProcessor::FunctionHandlerAsync",
        "Runtime": "dotnet8",
        "CodeUri": "./publish",
        "MemorySize": 256,
        "Timeout": 30,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "kinesis:GetRecords",
                  "kinesis:GetShardIterator",
                  "kinesis:DescribeStream",
                  "kinesis:ListStreams"
                ],
                "Resource": {
                  "Fn::Sub": "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${KinesisStreamName}"
                }
              }
            ]
          }
        ],
        "Events": {
          "KinesisEvent": {
            "Type": "Kinesis",
            "Properties": {
              "Stream": {
                "Fn::Sub": "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${KinesisStreamName}"
              },
              "StartingPosition": "LATEST",
              "BatchSize": 10
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "ApiGatewayInvokeURL": {
      "Description": "Invoke URL for API Gateway",
      "Value": {
        "Fn::Sub": "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/"
      }
    }
  }
}